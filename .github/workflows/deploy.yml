name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # 백엔드 빌드 및 테스트
  backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build backend
      run: |
        cd backend-unified
        mvn clean package -DskipTests
        
    - name: Run backend tests
      run: |
        cd backend-unified
        mvn test
        
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backend-jar
        path: backend-unified/target/*.jar

  # 프론트엔드 빌드 및 테스트
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build/

  # 배포 (메인 브랜치에 푸시될 때만)
  deploy:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download backend artifacts
      uses: actions/download-artifact@v3
      with:
        name: backend-jar
        path: ./backend-artifacts
        
    - name: Download frontend artifacts
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: ./frontend-artifacts
        
    - name: Deploy to server
      run: |
        echo "배포를 시작합니다..."
        # 여기에 실제 서버 배포 스크립트를 추가하세요
        # 예: SSH를 통한 배포, Docker 배포 등
        
    - name: Notify deployment
      run: |
        echo "배포가 완료되었습니다!"
        echo "백엔드: ${{ needs.backend.result }}"
        echo "프론트엔드: ${{ needs.frontend.result }}"
